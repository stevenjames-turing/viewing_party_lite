---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<movie_api_key>&query=Marvel
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.2.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sat, 02 Apr 2022 20:56:39 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 3652ac23a584d2dc9bfe56d6c049e266.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DFW56-P5
      X-Amz-Cf-Id:
      - fpTVORNEGKaMS4pIeYwFuJHGTVmBQooz6-Ss3quPkAyUvkrY-P4ERw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sat, 02 Apr 2022 20:56:39 GMT
recorded_with: VCR 6.1.0
